@{
    ViewBag.Title = "Home";
}

@Scripts.Render("~/bundles/jquery")




<br>
<br>

<div class="panel panel-default">

    <div class="panel-heading">
        <h3><span class="glyphicon glyphicon-hand-right"></span> <strong>Create a map</strong> </h3>
    </div>
    <div id="panel" class="panel-body">

        <ul class="nav nav-tabs">
            <li class="active"><a data-toggle="tab" href="#text-tab">From text</a></li>
            <li animation="true" trigger="hover" data-toggle="tooltip" data-placement="bottom" title="Use this tab to understand the structure"><a data-toggle="tab" href="#grid-tab">From grid</a></li> 
        </ul>

        <div class="tab-content container">
            <div id="text-tab" class="row tab-pane fade in active">
                <div class="col-sm-7 well">
                    <form>
                        <div class="form-group">
                            <label for="text-data">Fill in the textbox with numeric triangle:</label>

                            <textarea autofocus class="form-control" rows="10" id="text-data" title="Hint" data-toggle="popover" data-placement="top"
                                      animation="true" data-trigger="hover" data-content="Input numbers pressing enter after each line. Each line should contain one number more than the previous.">
                                3
                                7 4
                                2 4 6
                                8 5 9 3
                            </textarea>

                        </div>
                    </form>
                </div>
                <div class="col-sm-4 well col-sm-offset-1">
                    <form>
                        <div class="form-group">
                            @Html.AntiForgeryToken()
                            <label for="filename">Select predefined map:</label>
                            <select class="form-control" id="filename">
                                <option>example.txt</option>
                                <option>simple_triangle.txt</option>
                                <option>triangle.txt</option>
                            </select>
                        </div>
                    </form>
                </div>
            </div>
            
            <div id="grid-tab" class="tab-pane fade in">
                @Html.Partial("Grid")
            </div>
            <p><a id="sub" class="btn btn-primary" href="#sub"><span class="glyphicon glyphicon-ok"></span> Create</a></p>
        </div>
                

    </div>
</div>

<br\></br\>
<div id="res" class="panel panel-default .panel-primary">

    <div class="panel-heading">
        Result
    </div>
    <div class="panel-body">
        
        <p><a id="play-button" class="btn btn-primary" href="#sub"><span class="glyphicon glyphicon-play"></span> Play result</a></p>
        <div id="render-container">

        </div>

    </div>
</div>


<script>
    $(document).ready(
        function()
        {
            $('[data-toggle="popover"]').attr("delay", { show: 2000, hide: 300 }).popover();
            $('[data-toggle="tooltip"]').tooltip();

            // Send lines to server, get sum and path
            $('#sub').click(function () {
                        var data;
                        if ($('#text-tab').hasClass('active'))
                            data = $('#text-data').val();
                        else
                        {
                            data = ""
                            for (var i = 1; i <= realRowNum; i++)
                            {
                                for (var j = 1; j <= i; j++)
                                {
                                    var num = $('#grid').children().filter("[i='" + i + "']").filter("[j='" + j + "']").val()
                                    if (num.length === 0 || !num.trim())
                                        num = 0
                                    data = data + num + " "
                                }
                                data = data + '\n'
                            }
                            alert(data)
                        }

                        //alert($('#text-data').val());
                        $.ajax({
                            url: "@Url.Action("GetResult", "Home")",
                            data: "data=" + data,
                            type: "POST"
                        })
                          .done(function (data) {
                                if (console && console.log)
                                {
                                    if (data.errMsg)
                                    {
                                        $elem = $("<div class='alert alert-danger fade in'> <a href='#' class='close' data-dismiss='alert' aria-label='close'>&times;</a> <strong>Error!</strong> " + data.errMsg + " </div>")
                                        $('#panel').append($elem);
                                    }
                                    else
                                    {
                                        
                                        //alert(data.sum + "   " + data.dir + "   " + data.inpLines);
                                        buildResult(data);
                                    }
                                        
                                }
                            });
            })

            // get file contents from server as a string
            $('#filename').change(function () {
                            $.ajax({
                                url: "@Url.Action("GetFileCont", "Home")",
                                data: "filename=" + $('#filename').val(),
                                type: "POST"
                            })
                            .done(function (data) {
                              if (console && console.log)
                              {
                                  $('#text-data').val(data);
                                  //alert(data);
                              }
                            });
            })

            $('#play-button').click(function () {
                setTimeout(splash(0, 0), 3000);
            });

            function splash(i, j) {
                var rowNum = bubbles.length;
                
                //camera.centerOver(bubbles[i][j]);
                bubbles[i][j].playAnimation([3, 29]);
                if (i >= rowNum - 1)
                    return;
                var j_new;
                switch(dir[i])
                {
                    case 'l':
                        {
                            j_new = j - 1;
                            break;
                        }
                    case 'd':
                        {
                            j_new = j;
                            break;
                        }
                    case 'r':
                        {
                            j_new = j + 1;
                            break;
                        }
                    default:
                        {
                            alert("That's impossible");
                        }
                }

                setTimeout(function () { splash(i + 1, j_new); }, 500);
            }
        })
    


    var 
        bubbles = []

    var
        dir = ""

    var

        boxH = 135;
        boxW = 135;

        cellH = 70;
        cellW = 70;

        var
            terrain;

    //data: {<Number>sum: ..., <String>dir: ..., <Array<String>>inpLines: ...}
  
    // build bubble field based on server output data
    function buildResult(data)
    {
        // sum output
        $('#res div.panel-body div#sum-res').remove();
        $('#res div.panel-body').prepend("<div id='sum-res'> &sum;" + " = " + data.sum + "</div>");
        // --

        // assign to global
        dir = data.dir;

        terrain = g.group()
        gu = new GameUtilities();
        camera = gu.worldCamera(terrain, terrain.width, terrain.height, g.renderer.view);
        
        for (ii = 0; ii < bubbles.length; ii++)
            for (jj = 0; jj <= ii; jj++)
        {
            bubbles[ii][jj].visible = false
            terrain.removeChild(bubbles[ii][jj])
        }
        bubbles = []
        
        g.stage.addChild(terrain);
        terrain.x = 20;
        terrain.y = 20;
        
        var rowCnt = data.inpLines.length;

        // fit canvas to contents
        /*
        $('canvas').attr("width", 100 + boxW * rowCnt);
        $('canvas').attr("height", 100 + boxH * rowCnt);
        */
        if (rowCnt > 20)
        {
            $elem = $("<div class='alert alert-warning fade in'> <a href='#' class='close' data-dismiss='alert' aria-label='close'>&times;</a> <strong>Warning!</strong> Too many rows to visualize </div>")
            $('#panel').append($elem);
        }
        else
        for (var i = 0; i < rowCnt; i++)
        {
            var lineElem = data.inpLines[i].split(" ");
            for (var k = 0; k < lineElem.length; k++)
                lineElem[k] = +lineElem[k];
            var 
                max = data.max;

            bubbles[i] = []

            for (var j = 0; j <= i; j++) {

                var allDust = g.filmstrip("../sprites/bubble-death.png", 192, 192);

                var bubble = g.sprite(allDust);

                bubble.show(g.randomInt(0, 3));
                g.pulse(bubble, g.randomInt(10, 13), g.randomInt(80, 90) / 100);
                //bubble.anchor.set(0.5, 0.5)
                //g.breathe(bubble, 0.1, 0.1, 20, true, 100);
                bubble.loop = false;
                bubble.interact = true;
                bubble.fps = 30;

                //bubble.playAnimation([3, 29]);

                //bubble.on("click", function() { alert(3); this.playAnimation([3, 29])}, false);

                var value = +lineElem[j];
                var message = g.text(value, "15px puzzler", "white");

                bubble.width = boxW * value / (1.5 * max) + 30;
                bubble.height = boxH * value / (1.5 * max) + 30;

                message.x = cellW * j + cellW / 2 - message.width / 2;
                message.y = cellH * i + cellH / 2 - message.height / 2;

                bubble.x = cellW * j + cellW / 2 - bubble.width / 2;
                bubble.y = cellH * i + cellH / 2 - bubble.height / 2;

                terrain.addChild(bubble);
                terrain.addChild(message);

                bubbles[i].push(bubble)
            }
        }

        
           
    }


</script>


<script src="/Myscripts/lib/hexi.js"></script>

<!-- setup() is used in init.js -->
<script src="/Myscripts/initFunc/setup.js"></script>


<script src="/Myscripts/init.js"></script>




